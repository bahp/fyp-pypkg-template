name: GitHub Release

on:
  #release:
  #  types: [created]   # Default
  #  types: [published] # Recommended
  [push, pull_request]  # Testing
  

jobs:

  build-wheel:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        #pip install setuptools wheel twine
    - name: Build wheel
      run: python setup.py sdist #bdist_wheel
    #- name: Upload wheel
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: static-site
    #    path: ./dist/
   
    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: 
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        #tag_name: ${{ github.run_number }}
    - name: Print version
      run: echo ${{ steps.extract_version.outputs.version }}
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./dist/pkgname-0.0.1.tar.gz
        #asset_name: pkgname-v${{ github.run_number }}.tar.gz
        asset_name: pkgname-v0.0.${{ github.run_number }}
        asset_content_type: application/gzip
    
  #release-wheel:
  #  #runs-on: ubuntu-latest
  #  #needs: build-wheel
  #  steps:
  #  - name: Download wheel
  #    uses: actions/download-artifact@v2
  #    with:
  #      name: site-build
  #  - name: Create GitHub release
  #    id: create-new-release
  #    uses: actions/create-release@v1
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #    with:
  #      tag_name: ${{ github.run_number }}
  #      release_name: Release ${{ github.run_number }}
  #      
  #  - name: Upload release asset
   #   uses: actions/upload-release-asset@v1
   #   env:
   #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #   with:
   ##     upload_url: ${{ steps.create-new-release.outputs.upload_url }}
   #     asset_path: ./site.zip
    #    asset_name: site-v${{ github.run_number }}.zip
    #    asset_content_type: application/zip   
   # 
    #    twine upload dist/*
    # - name: Publish
    #  env:
    #    TWINE_USERNAME: __token__
    #    TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #  run: |
    #    python setup.py sdist bdist_wheel
    #    twine upload dist/*

